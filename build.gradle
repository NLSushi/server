plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "io.franzbecker.gradle-lombok" version "3.0.0"
    id 'java'
}

group = 'ewha.nlsushi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
jar {
    enabled = false
}
bootJar{
    enabled(true)
    archiveClassifier.set("")
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2:1.4.197'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation('org.slf4j:jcl-over-slf4j')
    implementation('ch.qos.logback:logback-classic')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // mariaDB 설정
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation(group: 'ch.qos.logback', name: 'logback-classic', version:  '1.2.3')
    implementation(group: 'ch.qos.logback', name: 'logback-core', version:  '1.2.3')

    //querydsl 관련 내용
    implementation("com.querydsl:querydsl-core") // querydsl
    implementation("com.querydsl:querydsl-jpa") // querydsl

    //elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    //swagger api
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

test {
    useJUnitPlatform()
}

//querydsl 관련 내용
def querydslDir = "$buildDir/generated/querydsl" // (3)

querydsl { // (4)
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets { // (5)
    main.java.srcDir querydslDir
}

configurations { // (6)
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl { // (7)
    options.annotationProcessorPath = configurations.querydsl
}
